#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GetCostLaptopFromWebsites.Models.linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="laptop_cost")]
	public partial class databaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertconfigure(configure instance);
    partial void Updateconfigure(configure instance);
    partial void Deleteconfigure(configure instance);
    partial void InsertWebsite(Website instance);
    partial void UpdateWebsite(Website instance);
    partial void DeleteWebsite(Website instance);
    partial void InsertLaptop_info(Laptop_info instance);
    partial void UpdateLaptop_info(Laptop_info instance);
    partial void DeleteLaptop_info(Laptop_info instance);
    partial void InsertLaptop_info_hist(Laptop_info_hist instance);
    partial void UpdateLaptop_info_hist(Laptop_info_hist instance);
    partial void DeleteLaptop_info_hist(Laptop_info_hist instance);
    partial void InsertSourceWebsite(SourceWebsite instance);
    partial void UpdateSourceWebsite(SourceWebsite instance);
    partial void DeleteSourceWebsite(SourceWebsite instance);
    #endregion
		
		public databaseDataContext() : 
				base(global::GetCostLaptopFromWebsites.Properties.Settings.Default.laptop_costConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<configure> configures
		{
			get
			{
				return this.GetTable<configure>();
			}
		}
		
		public System.Data.Linq.Table<Website> Websites
		{
			get
			{
				return this.GetTable<Website>();
			}
		}
		
		public System.Data.Linq.Table<Laptop_info> Laptop_infos
		{
			get
			{
				return this.GetTable<Laptop_info>();
			}
		}
		
		public System.Data.Linq.Table<Laptop_info_hist> Laptop_info_hists
		{
			get
			{
				return this.GetTable<Laptop_info_hist>();
			}
		}
		
		public System.Data.Linq.Table<SourceWebsite> SourceWebsites
		{
			get
			{
				return this.GetTable<SourceWebsite>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.configure")]
	public partial class configure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _property;
		
		private string _value;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpropertyChanging(string value);
    partial void OnpropertyChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public configure()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_property", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string property
		{
			get
			{
				return this._property;
			}
			set
			{
				if ((this._property != value))
				{
					this.OnpropertyChanging(value);
					this.SendPropertyChanging();
					this._property = value;
					this.SendPropertyChanged("property");
					this.OnpropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(MAX)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Website")]
	public partial class Website : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _WebSiteName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Created_date;
		
		private System.Nullable<System.DateTime> _Modified_date;
		
		private EntitySet<SourceWebsite> _SourceWebsites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWebSiteNameChanging(string value);
    partial void OnWebSiteNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreated_dateChanged();
    partial void OnModified_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnModified_dateChanged();
    #endregion
		
		public Website()
		{
			this._SourceWebsites = new EntitySet<SourceWebsite>(new Action<SourceWebsite>(this.attach_SourceWebsites), new Action<SourceWebsite>(this.detach_SourceWebsites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSiteName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string WebSiteName
		{
			get
			{
				return this._WebSiteName;
			}
			set
			{
				if ((this._WebSiteName != value))
				{
					this.OnWebSiteNameChanging(value);
					this.SendPropertyChanging();
					this._WebSiteName = value;
					this.SendPropertyChanged("WebSiteName");
					this.OnWebSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created_date
		{
			get
			{
				return this._Created_date;
			}
			set
			{
				if ((this._Created_date != value))
				{
					this.OnCreated_dateChanging(value);
					this.SendPropertyChanging();
					this._Created_date = value;
					this.SendPropertyChanged("Created_date");
					this.OnCreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Modified_date
		{
			get
			{
				return this._Modified_date;
			}
			set
			{
				if ((this._Modified_date != value))
				{
					this.OnModified_dateChanging(value);
					this.SendPropertyChanging();
					this._Modified_date = value;
					this.SendPropertyChanged("Modified_date");
					this.OnModified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Website_SourceWebsite", Storage="_SourceWebsites", ThisKey="Id", OtherKey="WebsiteId")]
		public EntitySet<SourceWebsite> SourceWebsites
		{
			get
			{
				return this._SourceWebsites;
			}
			set
			{
				this._SourceWebsites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SourceWebsites(SourceWebsite entity)
		{
			this.SendPropertyChanging();
			entity.Website = this;
		}
		
		private void detach_SourceWebsites(SourceWebsite entity)
		{
			this.SendPropertyChanging();
			entity.Website = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Laptop_info")]
	public partial class Laptop_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SourceWebsiteId;
		
		private string _Name;
		
		private System.Nullable<double> _Price;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Created_date;
		
		private System.Nullable<System.DateTime> _Modified_date;
		
		private EntitySet<Laptop_info_hist> _Laptop_info_hists;
		
		private EntityRef<SourceWebsite> _SourceWebsite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSourceWebsiteIdChanging(int value);
    partial void OnSourceWebsiteIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreated_dateChanged();
    partial void OnModified_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnModified_dateChanged();
    #endregion
		
		public Laptop_info()
		{
			this._Laptop_info_hists = new EntitySet<Laptop_info_hist>(new Action<Laptop_info_hist>(this.attach_Laptop_info_hists), new Action<Laptop_info_hist>(this.detach_Laptop_info_hists));
			this._SourceWebsite = default(EntityRef<SourceWebsite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceWebsiteId", DbType="Int NOT NULL")]
		public int SourceWebsiteId
		{
			get
			{
				return this._SourceWebsiteId;
			}
			set
			{
				if ((this._SourceWebsiteId != value))
				{
					if (this._SourceWebsite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceWebsiteIdChanging(value);
					this.SendPropertyChanging();
					this._SourceWebsiteId = value;
					this.SendPropertyChanged("SourceWebsiteId");
					this.OnSourceWebsiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created_date
		{
			get
			{
				return this._Created_date;
			}
			set
			{
				if ((this._Created_date != value))
				{
					this.OnCreated_dateChanging(value);
					this.SendPropertyChanging();
					this._Created_date = value;
					this.SendPropertyChanged("Created_date");
					this.OnCreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Modified_date
		{
			get
			{
				return this._Modified_date;
			}
			set
			{
				if ((this._Modified_date != value))
				{
					this.OnModified_dateChanging(value);
					this.SendPropertyChanging();
					this._Modified_date = value;
					this.SendPropertyChanged("Modified_date");
					this.OnModified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laptop_info_Laptop_info_hist", Storage="_Laptop_info_hists", ThisKey="Id", OtherKey="Id")]
		public EntitySet<Laptop_info_hist> Laptop_info_hists
		{
			get
			{
				return this._Laptop_info_hists;
			}
			set
			{
				this._Laptop_info_hists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SourceWebsite_Laptop_info", Storage="_SourceWebsite", ThisKey="SourceWebsiteId", OtherKey="Id", IsForeignKey=true)]
		public SourceWebsite SourceWebsite
		{
			get
			{
				return this._SourceWebsite.Entity;
			}
			set
			{
				SourceWebsite previousValue = this._SourceWebsite.Entity;
				if (((previousValue != value) 
							|| (this._SourceWebsite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SourceWebsite.Entity = null;
						previousValue.Laptop_infos.Remove(this);
					}
					this._SourceWebsite.Entity = value;
					if ((value != null))
					{
						value.Laptop_infos.Add(this);
						this._SourceWebsiteId = value.Id;
					}
					else
					{
						this._SourceWebsiteId = default(int);
					}
					this.SendPropertyChanged("SourceWebsite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Laptop_info_hists(Laptop_info_hist entity)
		{
			this.SendPropertyChanging();
			entity.Laptop_info = this;
		}
		
		private void detach_Laptop_info_hists(Laptop_info_hist entity)
		{
			this.SendPropertyChanging();
			entity.Laptop_info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Laptop_info_hist")]
	public partial class Laptop_info_hist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KeyId;
		
		private int _Id;
		
		private int _SourceWebsiteId;
		
		private string _Name;
		
		private System.Nullable<double> _Price;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Created_date;
		
		private System.Nullable<System.DateTime> _Modified_date;
		
		private EntityRef<Laptop_info> _Laptop_info;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyIdChanging(int value);
    partial void OnKeyIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSourceWebsiteIdChanging(int value);
    partial void OnSourceWebsiteIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreated_dateChanged();
    partial void OnModified_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnModified_dateChanged();
    #endregion
		
		public Laptop_info_hist()
		{
			this._Laptop_info = default(EntityRef<Laptop_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KeyId
		{
			get
			{
				return this._KeyId;
			}
			set
			{
				if ((this._KeyId != value))
				{
					this.OnKeyIdChanging(value);
					this.SendPropertyChanging();
					this._KeyId = value;
					this.SendPropertyChanged("KeyId");
					this.OnKeyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Laptop_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceWebsiteId", DbType="Int NOT NULL")]
		public int SourceWebsiteId
		{
			get
			{
				return this._SourceWebsiteId;
			}
			set
			{
				if ((this._SourceWebsiteId != value))
				{
					this.OnSourceWebsiteIdChanging(value);
					this.SendPropertyChanging();
					this._SourceWebsiteId = value;
					this.SendPropertyChanged("SourceWebsiteId");
					this.OnSourceWebsiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created_date
		{
			get
			{
				return this._Created_date;
			}
			set
			{
				if ((this._Created_date != value))
				{
					this.OnCreated_dateChanging(value);
					this.SendPropertyChanging();
					this._Created_date = value;
					this.SendPropertyChanged("Created_date");
					this.OnCreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Modified_date
		{
			get
			{
				return this._Modified_date;
			}
			set
			{
				if ((this._Modified_date != value))
				{
					this.OnModified_dateChanging(value);
					this.SendPropertyChanging();
					this._Modified_date = value;
					this.SendPropertyChanged("Modified_date");
					this.OnModified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laptop_info_Laptop_info_hist", Storage="_Laptop_info", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Laptop_info Laptop_info
		{
			get
			{
				return this._Laptop_info.Entity;
			}
			set
			{
				Laptop_info previousValue = this._Laptop_info.Entity;
				if (((previousValue != value) 
							|| (this._Laptop_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Laptop_info.Entity = null;
						previousValue.Laptop_info_hists.Remove(this);
					}
					this._Laptop_info.Entity = value;
					if ((value != null))
					{
						value.Laptop_info_hists.Add(this);
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Laptop_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SourceWebsite")]
	public partial class SourceWebsite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Link;
		
		private string _ShopName;
		
		private string _LaptopName;
		
		private int _WebsiteId;
		
		private System.Nullable<System.DateTime> _Created_date;
		
		private System.Nullable<System.DateTime> _Modified_date;
		
		private EntitySet<Laptop_info> _Laptop_infos;
		
		private EntityRef<Website> _Website;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnShopNameChanging(string value);
    partial void OnShopNameChanged();
    partial void OnLaptopNameChanging(string value);
    partial void OnLaptopNameChanged();
    partial void OnWebsiteIdChanging(int value);
    partial void OnWebsiteIdChanged();
    partial void OnCreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreated_dateChanged();
    partial void OnModified_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnModified_dateChanged();
    #endregion
		
		public SourceWebsite()
		{
			this._Laptop_infos = new EntitySet<Laptop_info>(new Action<Laptop_info>(this.attach_Laptop_infos), new Action<Laptop_info>(this.detach_Laptop_infos));
			this._Website = default(EntityRef<Website>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ShopName
		{
			get
			{
				return this._ShopName;
			}
			set
			{
				if ((this._ShopName != value))
				{
					this.OnShopNameChanging(value);
					this.SendPropertyChanging();
					this._ShopName = value;
					this.SendPropertyChanged("ShopName");
					this.OnShopNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaptopName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LaptopName
		{
			get
			{
				return this._LaptopName;
			}
			set
			{
				if ((this._LaptopName != value))
				{
					this.OnLaptopNameChanging(value);
					this.SendPropertyChanging();
					this._LaptopName = value;
					this.SendPropertyChanged("LaptopName");
					this.OnLaptopNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteId", DbType="Int NOT NULL")]
		public int WebsiteId
		{
			get
			{
				return this._WebsiteId;
			}
			set
			{
				if ((this._WebsiteId != value))
				{
					if (this._Website.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebsiteIdChanging(value);
					this.SendPropertyChanging();
					this._WebsiteId = value;
					this.SendPropertyChanged("WebsiteId");
					this.OnWebsiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created_date
		{
			get
			{
				return this._Created_date;
			}
			set
			{
				if ((this._Created_date != value))
				{
					this.OnCreated_dateChanging(value);
					this.SendPropertyChanging();
					this._Created_date = value;
					this.SendPropertyChanged("Created_date");
					this.OnCreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Modified_date
		{
			get
			{
				return this._Modified_date;
			}
			set
			{
				if ((this._Modified_date != value))
				{
					this.OnModified_dateChanging(value);
					this.SendPropertyChanging();
					this._Modified_date = value;
					this.SendPropertyChanged("Modified_date");
					this.OnModified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SourceWebsite_Laptop_info", Storage="_Laptop_infos", ThisKey="Id", OtherKey="SourceWebsiteId")]
		public EntitySet<Laptop_info> Laptop_infos
		{
			get
			{
				return this._Laptop_infos;
			}
			set
			{
				this._Laptop_infos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Website_SourceWebsite", Storage="_Website", ThisKey="WebsiteId", OtherKey="Id", IsForeignKey=true)]
		public Website Website
		{
			get
			{
				return this._Website.Entity;
			}
			set
			{
				Website previousValue = this._Website.Entity;
				if (((previousValue != value) 
							|| (this._Website.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Website.Entity = null;
						previousValue.SourceWebsites.Remove(this);
					}
					this._Website.Entity = value;
					if ((value != null))
					{
						value.SourceWebsites.Add(this);
						this._WebsiteId = value.Id;
					}
					else
					{
						this._WebsiteId = default(int);
					}
					this.SendPropertyChanged("Website");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Laptop_infos(Laptop_info entity)
		{
			this.SendPropertyChanging();
			entity.SourceWebsite = this;
		}
		
		private void detach_Laptop_infos(Laptop_info entity)
		{
			this.SendPropertyChanging();
			entity.SourceWebsite = null;
		}
	}
}
#pragma warning restore 1591
